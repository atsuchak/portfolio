let inputDir = { x: 0, y: 0 };
let speed = 10;
let score = 0;
let lastPaintTime = 0;
let snakeArr = [{ x: 13, y: 15 }];
let food = { x: 6, y: 7 };
let board = document.getElementById("board");

// ðŸŽµ Load Sounds
let foodSound = new Audio("music/food.mp3");
let gameOverSound = new Audio("music/gameover.mp3");
let moveSound = new Audio("music/move.mp3");
let musicSound = new Audio("music/background.mp3");
musicSound.loop = true; // ðŸŽ¶ Loop background music

// Load high score from local storage
let hiscore = localStorage.getItem("hiscore");
let hiscoreval = hiscore ? JSON.parse(hiscore) : 0;
document.getElementById("hiscoreBox").innerHTML = "HiScore: " + hiscoreval;

// Game loop
function main(ctime) {
    window.requestAnimationFrame(main);
    if ((ctime - lastPaintTime) / 1000 < 1 / speed) return;
    lastPaintTime = ctime;
    gameEngine();
}

function isCollide(snake) {
    for (let i = 1; i < snake.length; i++) {
        if (snake[i].x === snake[0].x && snake[i].y === snake[0].y) return true;
    }
    return snake[0].x >= 18 || snake[0].x < 0 || snake[0].y >= 18 || snake[0].y < 0;
}

function gameEngine() {
    // If collision occurs
    if (isCollide(snakeArr)) {
        gameOverSound.play();
        musicSound.pause(); // Stop background music
        alert("Game Over! Press any key to restart.");
        snakeArr = [{ x: 13, y: 15 }];
        inputDir = { x: 0, y: 0 };
        score = 0;
        document.getElementById("scoreBox").innerHTML = "Score: " + score;
        musicSound.play(); // Restart music after reset
    }

    // If food is eaten
    if (snakeArr[0].x === food.x && snakeArr[0].y === food.y) {
        foodSound.play();
        score += 1;
        if (score > hiscoreval) {
            hiscoreval = score;
            localStorage.setItem("hiscore", JSON.stringify(hiscoreval));
            document.getElementById("hiscoreBox").innerHTML = "HiScore: " + hiscoreval;
        }
        document.getElementById("scoreBox").innerHTML = "Score: " + score;
        snakeArr.unshift({ x: snakeArr[0].x + inputDir.x, y: snakeArr[0].y + inputDir.y });

        // Generate new food position
        let a = 2, b = 16;
        food = { x: Math.floor(a + (b - a) * Math.random()), y: Math.floor(a + (b - a) * Math.random()) };
    }

    // Move the snake
    for (let i = snakeArr.length - 2; i >= 0; i--) {
        snakeArr[i + 1] = { ...snakeArr[i] };
    }
    snakeArr[0].x += inputDir.x;
    snakeArr[0].y += inputDir.y;

    // Render the board
    board.innerHTML = "";
    
    // Display the snake
    snakeArr.forEach((e, index) => {
        let snakeElement = document.createElement('div');
        snakeElement.style.gridRowStart = e.y;
        snakeElement.style.gridColumnStart = e.x;
        snakeElement.classList.add(index === 0 ? 'head' : 'snake');
        board.appendChild(snakeElement);
    });

    // Display the food
    let foodElement = document.createElement('div');
    foodElement.style.gridRowStart = food.y;
    foodElement.style.gridColumnStart = food.x;
    foodElement.classList.add('food');
    board.appendChild(foodElement);
}

// Start game loop
window.requestAnimationFrame(main);

// Listen for key events
window.addEventListener("keydown", (e) => {
    inputDir = { x: 0, y: 1 }; // Start movement
    moveSound.play(); // Play move sound on key press
    musicSound.play(); // Ensure background music plays when the game starts
    

    switch (e.key) {
        case "ArrowUp": inputDir = { x: 0, y: -1 }; break;
        case "ArrowDown": inputDir = { x: 0, y: 1 }; break;
        case "ArrowLeft": inputDir = { x: -1, y: 0 }; break;
        case "ArrowRight": inputDir = { x: 1, y: 0 }; break;
    }
});

document.getElementById("resetHighScore").addEventListener("click", () => {
    localStorage.removeItem("hiscore"); // Remove stored high score
    hiscoreval = 0; // Reset high score in memory
    localStorage.setItem("hiscore", hiscoreval); // Save new high score as 0
    document.getElementById("hiscoreBox").innerHTML = "HiScore: " + hiscoreval;
    alert("ðŸ”¥ High Score Reset! ðŸ”¥");
});

// Mobile control buttons
document.getElementById('upBtn').addEventListener('click', () => {
    inputDir = { x: 0, y: -1 };  // Up movement
    moveSound.play();  // Play move sound
});

document.getElementById('downBtn').addEventListener('click', () => {
    inputDir = { x: 0, y: 1 };  // Down movement
    moveSound.play();  // Play move sound
});

document.getElementById('leftBtn').addEventListener('click', () => {
    inputDir = { x: -1, y: 0 };  // Left movement
    moveSound.play();  // Play move sound
});

document.getElementById('rightBtn').addEventListener('click', () => {
    inputDir = { x: 1, y: 0 };  // Right movement
    moveSound.play();  // Play move sound
});








css


@import url('https://fonts.googleapis.com/css2?family=New+Tegomin&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: url(Photos/snakeLogo.png);
    background-repeat: no-repeat;
    background-position: bottom right;
    background-color: rgb(130, 130, 100);
    display: flex;
    flex-direction: column; 
    align-items: center;
    height: 100vh;
    font-family: 'New Tegomin', serif;
    justify-content: center; 
}


.header {
    text-align: center; 
    width: 100%;
    margin-bottom: 20px; 
}

.gameContainer {
    display: flex;
    flex-direction: row; 
    align-items: center; 
}

.scoreContainer {
    display: flex;
    flex-direction: column; 
    align-items: flex-start; 
    margin-left: 20px; 
    font-size: 20px;
    margin-top: -480px; 
}

#scoreBox, #hiscoreBox {
    font-size: 24px;
    font-weight: bold;
    margin: 10px;
}

#resetHighScore {
    font-family: 'New Tegomin', serif;
    background: none;
    border: 3px solid;
    border-radius: 10px;
    font-size: 24px;
    font-weight: bold;
    margin: 10px;
    padding: 10px 20px;  
    box-sizing: border-box;  
    text-align: center; 
    white-space: nowrap;  
    width: auto; 
    display: inline-block; 
}

#board {
    background: linear-gradient(rgb(170, 236, 170), rgb(236, 236, 167));
    width: 80vw;
    height: 80vh;
    max-width: 700px;
    max-width: 700px;
    margin: 0 auto;
    border: 2px solid black;
    display: grid;
    grid-template-rows: repeat(48, 1fr);
    grid-template-columns: repeat(48, 1fr);
    padding: 10px;
}

.head {
    background: linear-gradient(rgb(240, 124, 124), rgb(228, 228, 129));
    border: 2px solid black;
    width: 100%;
    height: 100%;
}

.snake {
    background-color: purple;
    border: 1px solid white;
    width: 100%;
    height: 100%;
}

.food {
    background: linear-gradient(red, purple);
    border: 1px solid black;
    border-radius: 50%;
    width: 100%;
    height: 100%;
}

.mobile-controls {
    position: fixed;
    bottom: 50px;
    right: 100px;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
}

.mobile-controls div {
    display: flex;
    justify-content: space-between;
    width: 100%;
}

button {
    font-size: 24px;
    padding: 15px;
    width: 60px;
    height: 60px;
    margin: 5px;
    margin-right: 80px;
    background-color: #4CAF50;
    border: none;
    border-radius: 50%;
    /* color: white; 
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}

@media (max-width: 768px) {
    
    #board {
        width: 85vw;
        height: 85vw;
        max-width: 400px; 
        max-height: 400px;
    }

    .mobile-controls {
        bottom: 20px; 
        right: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    button {
        font-size: 20px;
        padding: 12px;
        width: 50px;
        height: 50px;
    }

    .scoreContainer {
        font-size: 16px;
        margin-left: 10px;
        margin-top: 20px;
    }

    #resetHighScore {
        font-size: 20px;
        padding: 10px 15px;
    }
}


@media (max-width: 768px) and (orientation: landscape) {
    #board {
        width: 90vw; 
        height: 45vw; 
        max-width: 600px; 
        max-height: 400px; 
        margin-left: 5vw; 
        margin-right: 5vw; 
    }

    .mobile-controls {
        bottom: 20px;
        right: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    button {
        font-size: 22px;
        padding: 14px;
        width: 55px;
        height: 55px;
    }

    .scoreContainer {
        font-size: 18px;
        margin-left: 10px;
        margin-top: 25px;
    }

    #resetHighScore {
        font-size: 22px;
        padding: 12px 18px;
    }
}

@media (max-width: 480px) {
    #board {
        width: 90vw; 
        height: 90vw;
        max-width: 300px;
        max-height: 300px;
    }
    .scoreContainer {
        font-size: 14px;
        margin-left: 5px;
        margin-top: 15px;
        margin-left: 5vw;
    }

    button {
        font-size: 18px;
        padding: 10px;
        width: 45px;
        height: 45px;
    }
}





//project file

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link rel="icon" type="image/png" href="Photos/image.ico" />
    <script src="https://kit.fontawesome.com/dbecc4d286.js" crossorigin="anonymous"></script>
    <title>Project</title>
</head>
<body>

<header>
    <div class="header-content-contact">
        <div class="menu">
            <span class="menu-item"><a href="index.html" class="nav-link">Home</a></span>
            <span class="menu-item"><a href="resume.html" class="nav-link">Resume</a></span>
            <span class="menu-item"><a href="contact.html" class="nav-link">Contact</a></span>
        </div>
        <div class="menu-icon">
            <i class="fa-solid fa-bars"></i>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const menuIcon = document.querySelector(".menu-icon");
            const menu = document.querySelector(".menu");
        
            menuIcon.addEventListener("click", function () {
                menu.classList.toggle("active");
            });
        });
    </script>
</header>

    <div style="text-align: center">
        <span class="resume"><a href="calculator.html" style="color: rgb(63, 148, 252);">Calculator</a></span>
    </div>

    <div style="text-align: center">
        <span class="resume"><a href="tictactoe.html" style="color: rgb(63, 148, 252);">TicTacToe</a></span>
    </div>

    <div style="text-align: center">
        <span class="resume"><a href="snake.html" style="color: rgb(63, 148, 252);">Snake Game</a></span>
    </div>

    <div style="text-align: center">
        <span class="resume"><a href="mineGame.html" style="color: rgb(63, 148, 252);">Minesweeper</a></span>
    </div>

    <div style="text-align: center">
        <span class="resume"><a href="facebook.html" style="color: rgb(63, 148, 252);">Facebook</a></span>
    </div>
</body>
</html>

<footer class="footer">
    <div class="footer-content">
        <span class="name">Â© 2025 Ahnaf Tajwar Suchak. All rights reserved</span>
    </div>
</footer>
